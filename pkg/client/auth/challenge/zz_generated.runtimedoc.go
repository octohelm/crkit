/*
Package challenge GENERATED BY gengo:runtimedoc
DON'T EDIT THIS FILE
*/
package challenge

// nolint:deadcode,unused
func runtimeDoc(v any, names ...string) ([]string, bool) {
	if c, ok := v.(interface {
		RuntimeDoc(names ...string) ([]string, bool)
	}); ok {
		return c.RuntimeDoc(names...)
	}
	return nil, false
}

func (v Challenge) RuntimeDoc(names ...string) ([]string, bool) {
	if len(names) > 0 {
		switch names[0] {
		case "Scheme":
			return []string{
				"Scheme is the auth-scheme according to RFC 2617",
			}, true
		case "Parameters":
			return []string{
				"Parameters are the auth-params according to RFC 2617",
			}, true

		}

		return nil, false
	}
	return []string{
		"Challenge carries information from a WWW-Authenticate response header.",
		"See RFC 2617.",
	}, true
}
